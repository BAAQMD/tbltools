% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_facilities.R
\name{filter_facilities}
\alias{filter_facilities}
\title{Filter and (re)name facilities}
\usage{
filter_facilities(input_data, whitelist)
}
\arguments{
\item{input_data}{(tabular data) must contain \code{fac_id}}

\item{whitelist}{(named list) names = facility names; elements = facility IDs (see examples)}
}
\value{
subset of \code{input_data}, with additional column \code{fac_name}
}
\description{
\strong{This really helps when the same facility changes IDs.} You
provide a named list, where the elements of the list are vectors of \emph{one
or more} (DataBank) facility IDs that all "should be counted as" the
corresponding name.
}
\details{
Specifics may depend on your intent, but some commonly referenced
"sets" are provided for you by the \code{inventory} package:
\itemize{
\item \code{DST_REFINING_FACILTIES}
\item \code{DST_LANDFILL_FACILITIES}
\item \code{DST_POWER_FACILITIES}
}
}
\note{
\code{input_data} \strong{must} contain column \code{fac_id}
}
\examples{
# First retrieve some data.
some_CH4_data <-
  RY(2009:2013) \%>\%
  point_source_emissions() \%>\%
  filter(pol_abbr == "CH4")

# You can filter for a whole "set" of related facilities ...
landfill_CH4_data <-
  some_CH4_data \%>\%
  filter_facilities(DST_LANDFILL_FACILITIES)

# ... or just a single specific "facility" having multiple IDs.
P66_CH4_data <-
  some_CH4_data \%>\%
  filter_facilities(DST_REFINING_FACILITIES["Phillips 66"])

# If you tabulate by `fac_id`, there's a discontinuity when P16 "becomes" P21359 ...
P66_CH4_data \%>\%
  tabulate_emissions_by(fac_id, pol_abbr, year)

# ... but you can avoid this by grouping on `fac_name` instead of `fac_id`.
P66_CH4_data \%>\%
  tabulate_emissions_by(fac_name, pol_abbr, year)

}
\seealso{
\code{\link[=filter_sources]{filter_sources()}}

\code{\link[=find_facility_ids]{find_facility_ids()}}

\code{\link[=with_facility_name]{with_facility_name()}}

\code{\link[=with_IRIS_site]{with_IRIS_site()}}
}
